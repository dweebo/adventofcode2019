  # L,12,R,4,R,4 ,R,8,R,6,R,6,R,4   26
  # L,12,L,12,R,4,L,12,L,12,R,4,L,4,R,2,L,8
  # R,12,R,4,L,6,L,8,L,8, L,12,R,4,R,4
  # A,B,C,A,B
  # but some of those are too long, doh
  #
  # common subsequences
  # L,12,R,4,R,4  = 11
  #
  # L,12,L,12,R,4 = 11
  #
  # 8, 8, 6, 4, 2
  #
  #
  # R12,R4
  #
  #
  # R4 L12 R12 R4 L12 R12
  #

  L12 R2 R2
  L12 R4 R4 R4 R2 R2 
  L8,L8,R4
  L12 R4 R4 R12  & R4, L12, L12


  # A = R,4,L,6,L,8,L,8
  # B R4,L12,R12
  # C L12 R4 R4 R12
........................BBBBBBBBBBBBB.......................
........................B...........B.......................
........................B...........B.......................
........................B...........B.......................
........................B...........BBBBBBBBBBBBB...........
........................B.......................B...........
........................B.......................B...........
........................B.......................B...........
........................B.......................B...........
........................B.......................B...........
........................B.......................B...........
........................B.......................B...........
....................BBBBB.......................B...........
....................#...........................B...........
....................#.........................##B##.A.......
....................#.........................#.B.#.A.......
........#####.....AAAAAAAAA.................AAAAA.#.A.......
........#...#.....A.#.....A.................A.#...#.A.......
........#...#.....A.#.....A.................A.######A#####^.
........#...#.....A.#.....A.................A.....#.A.......
AAAAAAA.#...#############.A.................A.....#.A.......
A.....A.#.........A.#...#.A.................A.....#.A.......
A.....A.#.........A.#.AAAAA.................AAAAAAAAA.......
A.....A.#.........A.#.#.#.........................#.........
A.....A###########A.#####.........................#.........
A.......#.............#...........................#.........
A.......#.............#.......................#####.........
A.......#.............#.......................#.............
AAAAAAAAA.............#.......................#.............
......................#.......................#.............
......................#.......................#.............
......................#.......................#.............
......................#.......................#.............
......................#.......................#.............
......................#############...........#.............
..................................#...........#.............
..................................#...........#.............
..................................#...........#.............
..................................#############.............
............................................................

how to code a solution?
start at beginning
dfs in all possible directions, building up segments
have to know when to start/stop building
stop when reach limit or run out of places to go
start when can move at least 2 in a direction?
